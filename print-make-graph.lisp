

(defun print-plot (plot n)
  (cond ((zerop n) (format t "~A" plot)
                   (force-output))
        (t (format t " ")
           (force-output)
           (print-plot plot (- n 1)))))

(defun print-plots (f start end plot)
  (cond ((> start end) (format t "~%")
                       t)
        (t (format t "~%")
           (force-output)
           (print-plot plot (funcall f start))
           (print-plots f (+ 1 start) end plot))))

(defun make-graph ()
  (format t "~&Function to graph? ")
  (force-output)
  (let ((f (read)))
    (format t "~&Starting x value? ")
    (force-output)
    (let ((start (read)))
      (format t "~&Ending x value? ")
      (force-output)
      (let ((end (read)))
        (format t "~&Plotting string? ")
        (force-output)
        (let ((plot (read)))
          (print-plots f start end plot))))))
